
import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { text, language = 'en' } = await req.json()

    if (!text) {
      throw new Error('Text is required')
    }

    // For demonstration purposes, we're simulating the TTS API call
    // In a real app, you would use a TTS service like Google TTS, Amazon Polly, or ElevenLabs
    
    // Simulate API call with a 1-second delay
    await new Promise(resolve => setTimeout(resolve, 1000))
    
    // Return a sample MP3 audio file as base64
    // In a real app, this would be the actual audio generated by the TTS service
    const sampleAudioBase64 = "SUQzAwAAAAAAI1RJVDIAAABUAAABdGV4dCB0byBzcGVlY2ggc2FtcGxlAAA=";

    return new Response(
      JSON.stringify({ 
        audioContent: sampleAudioBase64,
        language: language
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      }
    )
  } catch (error) {
    return new Response(
      JSON.stringify({ error: error.message }),
      {
        status: 400,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      }
    )
  }
})
